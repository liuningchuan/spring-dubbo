<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.liuning</groupId>
    <artifactId>spring-prometheus</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>

    <modules>
        <module>spring-prometheus-api</module>
        <module>spring-prometheus-web</module>
        <module>spring-prometheus-dao</module>
        <module>spring-prometheus-service</module>
        <module>spring-prometheus-dto</module>
        <module>spring-prometheus-common</module>
        <module>spring-prometheus-gateway</module>
        <module>spring-prometheus-starter</module>
        <module>spring-prometheus-test</module>
    </modules>

    <scm>
        <url>https://github.com/lnylnn/spring-prometheus</url>
        <connection>scm:git:https://github.com/lnlynn/spring-prometheus.git</connection>
        <developerConnection>scm:git:https://github.com/lnlynn/spring-prometheus.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <developers>
        <developer>
            <name>LiuNing</name>
            <email>mayrzlmayrzl@outlook.com</email>
        </developer>
    </developers>

    <repositories>
        <repository>
            <id>alimaven</id>
            <name>aliyun maven</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
        </repository>
    </repositories>

    <distributionManagement>
        <repository>
            <id>openapi-commons-release</id>
            <name>openapi commons release repository</name>
            <url>http://192.168.1.1:8080/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>openapi-commons-snapshot</id>
            <name>openapi commons snapshot repository</name>
            <url>http://192.168.1.1:8080/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <java.version>1.8</java.version>
        <project.source.encoding>UTF-8</project.source.encoding>
        <!--open-source-->
        <spring-boot.version>2.1.8.RELEASE</spring-boot.version>
        <jakarta.servlet-api.version>4.0.2</jakarta.servlet-api.version>
        <mybatis-spring-boot-starter.version>2.1.0</mybatis-spring-boot-starter.version>
        <mybatis-generator-core.version>1.3.6</mybatis-generator-core.version>
        <druid.version>1.1.10</druid.version>
        <hibernate-validator.version>6.1.5.Final</hibernate-validator.version>
        <mysql-connector-java.version>8.0.16</mysql-connector-java.version>
        <rocketmq-client.version>4.7.1</rocketmq-client.version>
        <rocketmq-spring-boot-starter.version>2.1.0</rocketmq-spring-boot-starter.version>
        <dubbo.version>2.7.2</dubbo.version>
        <curator-recipes.version>2.12.0</curator-recipes.version>
        <zkclient.version>0.11</zkclient.version>
        <springfox-swagger.version>2.6.1</springfox-swagger.version>
        <logback-classic.version>1.2.3</logback-classic.version>
        <commons-lang3.version>3.9</commons-lang3.version>
        <fastdfs-client-java.version>1.29-SNAPSHOT</fastdfs-client-java.version>
        <httpclient.version>4.5.13</httpclient.version>
        <gson.version>2.8.9</gson.version>
        <fastjson.version>1.2.70</fastjson.version>
        <lombok.version>1.18.12</lombok.version>
        <micrometer.version>1.7.0</micrometer.version>
        <!--plugins-->
        <spring-boot-maven-plugin.version>2.1.8.RELEASE</spring-boot-maven-plugin.version>
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-war-plugin.version>3.2.2</maven-war-plugin.version>
        <maven-source-plugin.version>3.1.0</maven-source-plugin.version>
        <mybatis-generator-maven-plugin.version>1.4.0</mybatis-generator-maven-plugin.version>
    </properties>

    <dependencies>
        <!--spring-boot-starter-test-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--junit-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <!--powermock-junit4-->
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>2.0.2</version>
            <scope>test</scope>
        </dependency>
        <!--powermock-mockito2-->
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
            <version>2.0.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--统一管理项目的版本号，确保应用的各个项目的依赖和版本一致
    dependencyManagement里只是声明依赖，并不实现引入，因此子项目需要显示的声明需要用的依赖-->
    <dependencyManagement>
        <dependencies>
            <!--本工程模块依赖-->
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-prometheus-dao</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-prometheus-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-prometheus-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-prometheus-dto</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-prometheus-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-prometheus-gateway</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-prometheus-web</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--spring-boot-dependencies-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--jakarta.servlet-api -->
            <dependency>
                <groupId>jakarta.servlet</groupId>
                <artifactId>jakarta.servlet-api</artifactId>
                <version>${jakarta.servlet-api.version}</version>
            </dependency>
            <!--mybatis-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>
            <!--druid-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!--mysql-connector-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>
            <!--mybatis-generator-->
            <dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-core</artifactId>
                <version>${mybatis-generator-core.version}</version>
            </dependency>
            <!--hibernate-validator-->
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <!--rocketmq-->
            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-client</artifactId>
                <version>${rocketmq-client.version}</version>
            </dependency>
            <!--acl权限控制-->
            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-acl</artifactId>
                <version>${rocketmq-client.version}</version>
            </dependency>
            <!--dubbo-->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <!--curator-recipes-->
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator-recipes.version}</version>
            </dependency>
            <!--zkclient-->
            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <version>${zkclient.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--日志logback,包括logback-core和slf4j-api-->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback-classic.version}</version>
            </dependency>
            <!--fastdfs-client，中央仓库没有fastdfs客户端，需要自己install到本地仓库-->
            <dependency>
                <groupId>org.csource</groupId>
                <artifactId>fastdfs-client-java</artifactId>
                <version>${fastdfs-client-java.version}</version>
            </dependency>
            <!--commons-lang3-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <!--httpclient-->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <!--gson-->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <!--fastjson-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!--lombok-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <!--prometheusj集成-->
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer.version}</version>
            </dependency>
            <!--指定micrometer-core版本-->
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-core</artifactId>
                <version>${micrometer.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot-maven-plugin.version}</version>
                </plugin>
                <!-- maven默认安装该插件，这里修改部分默认配置 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.source.encoding}</encoding>
                    </configuration>
                </plugin>
                <!--mybatis-generator-maven-plugin-->
                <plugin>
                    <groupId>org.mybatis.generator</groupId>
                    <artifactId>mybatis-generator-maven-plugin</artifactId>
                    <version>${mybatis-generator-maven-plugin.version}</version>
                    <configuration>
                        <configurationFile>src/main/resources/generatorConfig.xml</configurationFile>
                        <verbose>true</verbose>
                        <overwrite>true</overwrite>
                    </configuration>
                    <!--mybatis-generator的plugin有自己的classpath，我们在项目中直接继承的类和plugin不属于同一个classpath,
                    直接执行会报错，加入以下依赖解决该问题，使用前先mvn install将jar安装到本地仓库-->
                    <dependencies>
                        <dependency>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>spring-prometheus-dao</artifactId>
                            <version>${project.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
                <!--maven-war-plugin3.0.0版本以下强依赖web.xml，必须在webapp/WEB-INF目录下创建一个web.xml文件-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                </plugin>
                <!--将源码deploy到仓库，插件地址：http://maven.apache.org/plugins/maven-source-plugin/index.html-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>